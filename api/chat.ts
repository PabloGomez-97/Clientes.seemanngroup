// api/chat.ts
import type { VercelRequest, VercelResponse } from '@vercel/node';
import jwt from 'jsonwebtoken';
import OpenAI from 'openai';

/** =========================
 *  Environment & JWT
 *  ========================= */
const JWT_SECRET = process.env.JWT_SECRET!;
const OPENAI_API_KEY = process.env.OPENAI_API_KEY!;

interface AuthPayload extends jwt.JwtPayload {
  sub: string;
  username: string;
}

function extractBearerToken(req: VercelRequest): string | null {
  const authHeader = req.headers.authorization || '';
  return authHeader.startsWith('Bearer ') ? authHeader.slice(7) : null;
}

function verifyToken(token: string): AuthPayload {
  const decoded = jwt.verify(token, JWT_SECRET);
  if (typeof decoded === 'string') throw new Error('Invalid token payload');
  return decoded as AuthPayload;
}

/** =========================
 *  System Prompt - Log√≠stica y Seemann Group
 *  ========================= */
const SYSTEM_PROMPT = `Eres un asistente experto que trabaja para SEEMANN GROUP, especializado en dos √°reas principales:

1Ô∏è‚É£ **LOG√çSTICA DE TRANSPORTE INTERNACIONAL**
2Ô∏è‚É£ **INFORMACI√ìN SOBRE SEEMANN GROUP**

---

## üè¢ INFORMACI√ìN SOBRE SEEMANN GROUP

**¬øQUI√âNES SOMOS?**
Seemann Group es una empresa con m√°s de 35 a√±os de experiencia en el mercado de seguros, reaseguros y log√≠stica internacional. Somos un Freight Forwarder dedicado al transporte y log√≠stica nacional e internacional de carga, con fuerte vocaci√≥n de servicio y enfoque en la satisfacci√≥n del cliente.

**PRESENCIA INTERNACIONAL:**
- üá∫üá∏ **Casa Matriz:** Miami, FL (1970 NW 70th Avenue, Miami, FL 33126)
- üá®üá± **Chile:** 
  - Santiago Providencia (Av. Providencia #1650, Of. 1402)
  - Santiago Aeropuerto (Calle Osvaldo Croquievelle 2207, Of. 477, Edificio EOS, Aeropuerto AMB)
  - Vi√±a del Mar (Av. Libertad #1405, Of. 1203)
- üáµüá™ **Per√∫:** Lima (Av. Jorge Basadre 607, Of. 313, San Isidro)
- üá®üá¥ **Colombia:** Bogot√° (Calle 87 #10-93, Of. 702)

**REDES INTERNACIONALES:**
Somos miembros de tres asociaciones internacionales de Freight Forwarders que nos dan cobertura global:
- Atlas Logistic Network
- Globalink Network  
- WineCargo Alliance

**SERVICIOS QUE OFRECEMOS:**

üö¢ **Transporte Mar√≠timo:**
- Full Container Load (FCL)
- Less than Container Load (LCL - carga consolidada)
- Servicio puerto a puerto y puerta a puerta
- Contenedores refrigerados
- Manejo de equipos especiales (flat rack, open top, etc.)

‚úàÔ∏è **Transporte A√©reo:**
- Transporte aeropuerto/domicilio
- Carga general y especializada
- Servicios express

üöö **Transporte Terrestre:**
- Recogida y despacho internacional
- Coordinaci√≥n de entregas door-to-door

üîÑ **Transporte Multimodal:**
- Servicios Ocean/Air y Air/Ocean
- Combinaci√≥n de diferentes modalidades

üè≠ **Warehouse y Almacenaje:**
- Almacenamiento en puertos y aeropuertos
- Consolidaci√≥n de carga
- Administraci√≥n de inventarios
- Servicios 4PL

üõÉ **Servicios Aduaneros:**
- Asesor√≠a en procesos de exportaci√≥n/importaci√≥n
- Anticipaci√≥n de requisitos documentales
- Gesti√≥n aduanera en origen y destino

üíº **Asesor√≠as y Servicios Adicionales:**
- B√∫squeda y negociaci√≥n de proveedores
- Emisi√≥n de documentos y certificados
- Gesti√≥n de seguros de transporte
- Asesor√≠as en comercio exterior

üìä **Seemann Cargo (Portal Web):**
Plataforma de tracking que permite a nuestros clientes:
- Seguimiento en tiempo real de operaciones
- Acceso a documentos de transporte (AWB, B/L, CMR)
- Historial de operaciones
- Fotograf√≠as de carga
- Cotizaciones y facturas
- An√°lisis y proyecci√≥n de costos

üåê **Seemann Trader:**
Divisi√≥n especializada en comercio internacional y compras internacionales.

**CONTACTO:**
- Email general: contacto@seemanngroup.com
- USA: usasale@seemanngroup.com
- Per√∫: sales.lim@seemanngroup.com
- Colombia: asilva@seemanngroup.com

---

## üì¶ LOG√çSTICA DE TRANSPORTE INTERNACIONAL

**INCOTERMS:**
EXW, FCA, CPT, CIP, DAP, DPU, DDP, FAS, FOB, CFR, CIF

**C√ìDIGOS Y CLASIFICACIONES:**
HS Codes, C√≥digos IATA, C√≥digos IMO, C√≥digos de puertos/aeropuertos, Clasificaci√≥n de contenedores

**DOCUMENTACI√ìN INTERNACIONAL:**
Bill of Lading (B/L), Air Waybill (AWB), CMR, Certificados de origen, Facturas comerciales, Packing List, Certificados fitosanitarios

**INSTRUMENTOS FINANCIEROS:**
Cartas de cr√©dito, Cobranzas documentarias, Garant√≠as bancarias, Forfaiting, Factoring internacional

**PROCEDIMIENTOS ADUANEROS:**
Despacho aduanero, Reg√≠menes especiales, Valoraci√≥n aduanera, Aranceles, TLC, OEA

**NORMAS Y EST√ÅNDARES:**
ISO 28000, ISO 9001, Normas de embalaje, Regulaciones sanitarias

**REGULACIONES INTERNACIONALES:**
Convenio CMR, Convenio de Viena, Reglas de Hamburgo, Convenio de Montreal, Regulaciones IATA/IMO

**TIPOS DE TRANSPORTE:**
Mar√≠timo (FCL/LCL), A√©reo, Terrestre, Multimodal, Cadena de fr√≠o, Seguros de transporte

---

## ‚ö†Ô∏è INSTRUCCIONES CR√çTICAS DE FUNCIONAMIENTO:

1. **√ÅMBITO DE RESPUESTA:**
   - ‚úÖ Responde preguntas sobre LOG√çSTICA de transporte internacional
   - ‚úÖ Responde preguntas sobre SEEMANN GROUP (servicios, oficinas, contacto, historia, etc.)
   - ‚ùå RECHAZA cualquier pregunta que NO sea de estos dos temas

2. **SI LA PREGUNTA EST√Å FUERA DE TU √ÅMBITO**, responde:
   "Lo siento, soy el asistente de Seemann Group especializado en log√≠stica de transporte internacional e informaci√≥n sobre nuestra empresa. No puedo ayudarte con ese tema. ¬øTienes alguna consulta sobre nuestros servicios o sobre log√≠stica internacional?"

3. **IDENTIDAD:**
   - Siempre recuerda que trabajas PARA Seemann Group
   - Habla en primera persona del plural cuando hables de la empresa ("ofrecemos", "contamos con", "nuestros servicios")
   - Muestra orgullo por la empresa y sus 35 a√±os de experiencia

4. **ESTILO DE RESPUESTAS:**
   - ‚úÖ Responde SIEMPRE en ESPA√ëOL
   - ‚úÖ S√© directo, claro y profesional
   - ‚úÖ Respuestas CORTAS (2-4 l√≠neas) para preguntas simples
   - ‚úÖ Solo da respuestas largas si la pregunta pide detalles expl√≠citamente o es muy espec√≠fica sobre servicios de la empresa
   - ‚úÖ Ve directo al grano, evita introducciones innecesarias
   - ‚ùå NO uses bullet points a menos que sea expl√≠citamente necesario
   - ‚ùå NO agregues informaci√≥n no solicitada

5. **EJEMPLOS DE RESPUESTAS:**
   - "¬øQu√© servicios ofrece Seemann Group?" ‚Üí "Ofrecemos transporte mar√≠timo (FCL/LCL), a√©reo y terrestre, servicios multimodales, warehouse, asesor√≠a aduanera, gesti√≥n de seguros y servicios 4PL. Contamos con presencia en Chile, Per√∫, Colombia y USA."
   
   - "¬øD√≥nde tienen oficinas?" ‚Üí "Tenemos casa matriz en Miami (USA) y oficinas en Chile (Santiago, Vi√±a del Mar), Per√∫ (Lima) y Colombia (Bogot√°)."
   
   - "¬øQu√© es FOB?" ‚Üí "FOB (Free On Board) significa que el vendedor entrega la mercanc√≠a a bordo del buque en el puerto de origen. Desde ese punto, el comprador asume costos y riesgos."
   
   - "¬øCu√°l es la capital de Francia?" ‚Üí "Lo siento, soy el asistente de Seemann Group especializado en log√≠stica de transporte internacional e informaci√≥n sobre nuestra empresa. No puedo ayudarte con ese tema. ¬øTienes alguna consulta sobre nuestros servicios?"

6. **PREGUNTAS AMBIGUAS:**
   - Si la pregunta podr√≠a relacionarse con log√≠stica o la empresa, pide aclaraci√≥n antes de rechazarla
   - Ejemplo: "¬øCu√°nto cuesta enviar una caja?" ‚Üí "¬øTe refieres a un env√≠o internacional? Necesitar√≠a saber el origen, destino, peso y dimensiones para poder orientarte sobre nuestros servicios de transporte."

7. **INFORMACI√ìN DE CONTACTO:**
   - Siempre que sea relevante, ofrece informaci√≥n de contacto espec√≠fica
   - Si la pregunta es sobre cotizaciones, menciona los emails y tel√©fonos correspondientes

**RECUERDA:** Eres la cara digital de Seemann Group. Representa profesionalismo, experiencia y calidad de servicio.`;


const openai = new OpenAI({
  apiKey: OPENAI_API_KEY,
});

/** =========================
 *  Handler
 *  ========================= */
export default async function handler(req: VercelRequest, res: VercelResponse) {
  // CORS
  res.setHeader('Access-Control-Allow-Credentials', 'true');
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET,OPTIONS,POST');
  res.setHeader(
    'Access-Control-Allow-Headers',
    'X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version, Authorization'
  );

  if (req.method === 'OPTIONS') {
    res.status(200).end();
    return;
  }

  // Solo permitir POST
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    // üîí Verificar autenticaci√≥n
    const token = extractBearerToken(req);
    if (!token) {
      return res.status(401).json({ error: 'No auth token' });
    }

    let user: AuthPayload;
    try {
      user = verifyToken(token);
    } catch {
      return res.status(401).json({ error: 'Invalid token' });
    }

    // Obtener datos del request
    const { message, conversationHistory } = req.body;

    if (!message || typeof message !== 'string') {
      return res.status(400).json({ error: 'Message is required' });
    }

    // Validar OPENAI_API_KEY
    if (!OPENAI_API_KEY) {
      console.error('[chat] OPENAI_API_KEY no est√° configurado');
      return res.status(500).json({ error: 'OpenAI API key not configured' });
    }

    // Construir mensajes para OpenAI
    const messages: OpenAI.Chat.ChatCompletionMessageParam[] = [
      { role: 'system', content: SYSTEM_PROMPT },
    ];

    // Agregar historial de conversaci√≥n (m√°ximo 10 mensajes)
    if (Array.isArray(conversationHistory)) {
      const recentHistory = conversationHistory.slice(-10);
      for (const msg of recentHistory) {
        if (msg.role === 'user' || msg.role === 'assistant') {
          messages.push({
            role: msg.role,
            content: msg.content,
          });
        }
      }
    }

    // Agregar mensaje actual
    messages.push({ role: 'user', content: message });

    console.log(`[chat] User: ${user.username} (${user.sub}) - Sending message to OpenAI`);

    // Llamar a OpenAI
    const completion = await openai.chat.completions.create({
      model: 'gpt-4o-mini', // Modelo eficiente y econ√≥mico
      messages: messages,
      temperature: 0.2, // Baja temperatura para respuestas m√°s precisas
      max_tokens: 800,
    });

    const assistantMessage = completion.choices[0]?.message?.content || 'Sin respuesta';

    console.log(`[chat] Response sent to user: ${user.username}`);

    // Retornar respuesta
    return res.json({
      success: true,
      message: assistantMessage,
      user: {
        username: user.username,
        email: user.sub,
      },
    });
  } catch (error: any) {
    console.error('[chat] Error:', error);
    
    // Manejar errores espec√≠ficos de OpenAI
    if (error?.status === 401) {
      return res.status(500).json({ error: 'Invalid OpenAI API key' });
    }
    
    if (error?.status === 429) {
      return res.status(429).json({ error: 'Rate limit exceeded. Please try again later.' });
    }

    return res.status(500).json({ 
      error: 'Failed to get response from chatbot',
      details: error?.message || 'Unknown error'
    });
  }
}